using LibraryManagement.Middleware;
using Microsoft.AspNetCore.Authentication.Cookies;

var builder = WebApplication.CreateBuilder(args);

// ????????????????? MongoDB ????????
builder.Services.AddSingleton<MongoDbService>();
builder.Services.AddHttpContextAccessor();
builder.Services.AddControllersWithViews();

// ????????????????? Authentication ??? Session
builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/Account/Login"; // ??????????? Login
        options.LogoutPath = "/Account/Logout"; // ??????????? Logout
        options.AccessDeniedPath = "/Account/AccessDenied"; // ???????????????????????????
        options.ExpireTimeSpan = TimeSpan.FromMinutes(30); // ???????? Session ???????
    });
builder.Services.AddAuthorization();

builder.Services.AddDistributedMemoryCache();
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(30); // ???????? Session ???????
    options.Cookie.HttpOnly = true; // ????????????????
    options.Cookie.IsEssential = true; // ??????????????????????
});

var app = builder.Build();

// ????????????????????????
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

// ????? Middleware
app.UseHttpsRedirection();
app.UseStaticFiles(); // ?????? Static Assets
app.UseRouting();
app.UseSession(); // ?????????? Session
app.UseAuthentication(); // ?????????? Authentication
app.UseAuthorization(); // ?????????? Authorization
app.UseMiddleware<UsernameMiddleware>();

// ????????????
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Search}/{action=SearchBook}/{id?}");

app.Run();
